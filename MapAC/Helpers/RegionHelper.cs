using MapAC.Helpers;
using System.Collections.Generic;
using System.Drawing;

namespace MapAC
{
    public static class RegionHelper
    {
        /// <summary>
        /// Generated by sampling the textures for each terrain type
        /// </summary>
        /// 
        private static List<Color> landColor_tod = new List<Color>(){
            Color.FromArgb(102, 88, 72), // 0 - BarrenRock - 0x06006d6f
            Color.FromArgb(89, 94, 47), // 1 - Grassland - 0x06006d40
            Color.FromArgb(175, 179, 178), // 2 - Ice - 0x06006d4b
            Color.FromArgb(95, 94, 36), // 3 - LushGrass - 0x06006d06
            Color.FromArgb(67, 47, 20), // 4 - MarshSparseSwamp - 0x06006d4a
            Color.FromArgb(56, 39, 21), // 5 - MudRichDirt - 0x06006d46
            Color.FromArgb(23, 17, 27), // 6 - ObsidianPlain - 0x06006d56
            Color.FromArgb(112, 84, 50), // 7 - PackedDirt - 0x06006d48
            Color.FromArgb(98, 80, 58), // 8 - PatchyDirt - 0x06006d42
            Color.FromArgb(70, 72, 36), // 9 - PatchyGrassland - 0x06006d3c
            Color.FromArgb(215, 155, 103), // 10 - sand-yellow - 0x06006d43
            Color.FromArgb(148, 129, 107), // 11 - sand-grey - 0x06006d44
            Color.FromArgb(183, 144, 109), // 12 - sand-rockStrewn - 0x06006d53
            Color.FromArgb(151, 121, 87), // 13 - SedimentaryRock - 0x06006d51
            Color.FromArgb(88, 82, 55), // 14 - SemiBarrenRock - 0x06006d41
            Color.FromArgb(191, 196, 201), // 15 - Snow - 0x06006d47
            Color.FromArgb(35, 76, 110), // 16 - WaterRunning - 0x06006d4d
            Color.FromArgb(21, 68, 80), // 17 - WaterStandingFresh - 0x06006d45
            Color.FromArgb(36, 41, 68), // 18 - WaterShallowSea - 0x06006d4f
            Color.FromArgb(31, 63, 57), // 19 - WaterShallowStillSea - 0x06006d4c
            Color.FromArgb(31, 35, 62), // 20 - WaterDeepSea - 0x06006d4e
            Color.FromArgb(90, 95, 41), // 21 - forestfloor - 0x06006d49
            Color.FromArgb(35, 76, 110), // 22 - FauxWaterRunning - 0x06006d4d
            Color.FromArgb(70, 90, 66), // 23 - SeaSlime - 0x06006d55
            Color.FromArgb(102, 88, 72), // 24 - Argila - 0x06006d6f
            Color.FromArgb(28, 19, 23), // 25 - Volcano1 - 0x06006d54
            Color.FromArgb(103, 103, 103), // 26 - Volcano2 - 0x06006d6a
            Color.FromArgb(127, 164, 163), // 27 - BlueIce - 0x06006d50
            Color.FromArgb(70, 72, 36), // 28 - Moss - 0x06006d3c
            Color.FromArgb(65, 54, 22), // 29 - DarkMoss - 0x06006d3d
            Color.FromArgb(70, 57, 56), // 30 - olthoi - 0x06006d3e
            Color.FromArgb(102, 88, 72), // 31 - DesolateLands - 0x06006d6f
            Color.FromArgb(112, 116, 105), // 32 - roads - 0x06006d3f
         };

        private static List<Color> landColor_acdm = new List<Color>(){
            Color.FromArgb(101, 81, 46), // 0 - BarrenRock - 0x0500145c
            Color.FromArgb(68, 80, 26), // 1 - Grassland - 0x05001459
            Color.FromArgb(133, 133, 145), // 2 - Ice - 0x05001468
            Color.FromArgb(62, 84, 15), // 3 - LushGrass - 0x05001456
            Color.FromArgb(83, 46, 11), // 4 - MarshSparseSwamp - 0x05001467
            Color.FromArgb(65, 43, 29), // 5 - MudRichDirt - 0x05001462
            Color.FromArgb(48, 44, 50), // 6 - ObsidianPlain - 0x05001463
            Color.FromArgb(104, 77, 41), // 7 - PackedDirt - 0x05001465
            Color.FromArgb(68, 50, 14), // 8 - PatchyDirt - 0x0500145b
            Color.FromArgb(53, 91, 3), // 9 - PatchyGrassland - 0x05001457
            Color.FromArgb(166, 116, 59), // 10 - sand-yellow - 0x0500145d
            Color.FromArgb(152, 152, 108), // 11 - sand-grey - 0x0500145f
            Color.FromArgb(157, 107, 60), // 12 - sand-rockStrewn - 0x0500145e
            Color.FromArgb(128, 81, 49), // 13 - SedimentaryRock - 0x050014a7
            Color.FromArgb(86, 97, 65), // 14 - SemiBarrenRock - 0x0500145a
            Color.FromArgb(234, 247, 254), // 15 - Snow - 0x05001464
            Color.FromArgb(63, 110, 133), // 16 - WaterRunning - 0x0500146a
            Color.FromArgb(23, 81, 58), // 17 - WaterStandingFresh - 0x05001461
            Color.FromArgb(34, 82, 101), // 18 - WaterShallowSea - 0x0500146c
            Color.FromArgb(46, 78, 96), // 19 - WaterShallowStillSea - 0x05001469
            Color.FromArgb(46, 61, 84), // 20 - WaterDeepSea - 0x0500146b
            Color.FromArgb(37, 49, 9), // 21 - forestfloor - 0x05001466
            Color.FromArgb(63, 110, 133), // 22 - FauxWaterRunning - 0x0500146a
            Color.FromArgb(33, 41, 30), // 23 - SeaSlime - 0x05001827
            Color.FromArgb(101, 81, 46), // 24 - Argila - 0x0500145c
            Color.FromArgb(47, 36, 36), // 25 - Volcano1 - 0x0500181f
            Color.FromArgb(76, 77, 76), // 26 - Volcano2 - 0x05001924
            Color.FromArgb(195, 224, 239), // 27 - BlueIce - 0x05001900
            Color.FromArgb(116, 135, 87), // 28 - Moss - 0x05001c3a
            Color.FromArgb(64, 99, 49), // 29 - DarkMoss - 0x05001c3b
            Color.FromArgb(68, 41, 47), // 30 - olthoi - 0x05001c3c
            Color.FromArgb(101, 81, 46), // 31 - UNKNOWN - 0x0500145c
            Color.FromArgb(138, 131, 113), // 32 - roads - 0x05001458
        };


        public static List<Color> GetMapColors()
        {
            if (Properties.Settings.Default.ACDM_MapColor)
            {
                return landColor_acdm;
            }
            else
            {
                return landColor_tod;
            }
        }


        /// <summary>
        /// Functions like the Region.LandDefs.Land_Height_Table from (client_)portal.dat 0x13000000
        /// </summary>
        /// <param name="height"></param>
        /// <returns></returns>
        public static int GetLandheight(byte height)
        {
            if (height <= 200)
                return height * 2;
            else if (height <= 240)
                return 400 + (height - 200) * 4;
            else if (height <= 250)
                return 560 + (height - 240) * 8;
            else
                return 640 + (height - 250) * 10;
        }


    }
}
